name: Build ALL
run-name: Build ALL
on:
  workflow_dispatch: { }
  release:
    types: [ published ]

jobs:
  Build_Android:
    runs-on: ubuntu-22.04
    steps:
      - uses: actions/checkout@v3
      - uses: subosito/flutter-action@v2
        with:
          channel: "stable"
          flutter-version-file: pubspec.yaml
          architecture: x64
      - name: Decode and install certificate
        env:
          STORE_FILE: ${{ secrets.ANDROID_KEYSTORE }}
          PROPERTY_FILE: ${{ secrets.ANDROID_KEY_PROPERTIES }}
        run: |
          echo "$STORE_FILE" | base64 --decode > android/app/keystore.jks
          echo "$PROPERTY_FILE" > android/key.properties
      - uses: actions/setup-java@v4
        with:
          distribution: 'oracle'
          java-version: '17'
      - name: Check rust-toolchain.toml
        run: rustup show
      - run: flutter pub get
      - run: flutter build apk --release
      - uses: actions/upload-artifact@v4
        with:
          name: apks
          path: build/app/outputs/apk/release

  #windows
  Build_Windows:
    name: "Release for Windows"
    runs-on: "windows-latest"
    needs: [ flutter-build-android ]
    permissions: write-all

    steps:
      - name: Clone repository
        uses: actions/checkout@v4

      - run: |
          $tag = "${{ github.ref }}".Replace('refs/tags/', '')
          echo "tag=$(echo $tag)" >> $env:GITHUB_ENV

      - run: echo "Kostori_windows_${env:tag}.zip build progress"

      - run: choco install yq

      - name: Enable Git longpaths
        run: git config --system core.longpaths true

      - name: Set up Flutter
        uses: subosito/flutter-action@v2.16.0
        with:
          channel: stable
          flutter-version-file: pubspec.yaml

      - name: Set up Java
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '18'

      - run: flutter pub get

      - run: flutter build windows

      - run: Compress-Archive build/windows/x64/runner/Release/* Kostori_windows_${env:tag}.zip

      - name: Upload windows outputs
        uses: actions/upload-artifact@v4
        id: unsigned-windows-zip-artifacts
        with:
          name: windows_outputs_unsigned_zip
          path: |
            Kostori_windows_*.zip

      - run: New-Item -Path "build/windows/zip_signed_output" -ItemType Directory
      - name: sign windows zip
        uses: signpath/github-action-submit-signing-request@v1.1
        with:
          api-token: '${{ secrets.SIGNPATH_API_TOKEN }}'
          organization-id: "ef5813e3-663f-4988-932d-7347304db90b"
          project-slug: "Kostori" `
          signing-policy-slug: "kostori" `
          artifact-configuration-slug: 'Packet'
          github-artifact-id: '${{ steps.unsigned-windows-zip-artifacts.outputs.artifact-id }}'
          wait-for-completion: true
          output-artifact-directory: 'build/windows/zip_signed_output'

      - name: Upload windows zip signed outputs
        uses: actions/upload-artifact@v4
        id: signed-windows-zip-artifacts
        with:
          name: windows_zip_signed_outputs
          path: build/windows/zip_signed_output/*.zip

      - name: Replace Unpacked Artifact with Signed Artifact
        run: Expand-Archive -Path "build/windows/zip_signed_output/Kostori_windows_${env:tag}_signed.zip" -DestinationPath "build/windows/x64/runner/Release" -Force

      - name: Build unsigned msix
        run: dart run msix:create

      - name: Upload windows msix outputs (unsigned)
        uses: actions/upload-artifact@v4
        id: unsigned-windows-msix-artifacts
        with:
          name: windows_msix_outputs_unsigned
          path: build/windows/x64/runner/Release/kostori.msix

      - run: New-Item -Path "build/windows/msix_signed_output" -ItemType Directory
      - name: sign windows msix
        uses: signpath/github-action-submit-signing-request@v1.1
        with:
          api-token: '${{ secrets.SIGNPATH_API_TOKEN }}'
          organization-id: "ef5813e3-663f-4988-932d-7347304db90b"
          project-slug: "Kostori" `
          signing-policy-slug: "kostori" `
          artifact-configuration-slug: 'MSIX'
          github-artifact-id: '${{ steps.unsigned-windows-msix-artifacts.outputs.artifact-id }}'
          wait-for-completion: true
          output-artifact-directory: 'build/windows/msix_signed_output'

      - name: Upload windows msix signed outputs
        uses: actions/upload-artifact@v4
        id: signed-windows-msix-artifacts_final
        with:
          name: windows_msix_signed_outputs
          path: build/windows/msix_signed_output/*.msix

  Release:
    runs-on: ubuntu-22.04
    needs: [ Build_Android, Build_Windows ]
    if: github.event_name == 'release'
    steps:
      - uses: actions/download-artifact@v4
        with:
          name: apks
          path: outputs
      - name: Download windows zip build file
        uses: actions/download-artifact@v4
        with:
          name: windows_zip_signed_outputs
          path: windows_zip_signed_outputs
      - name: List files in windows_outputs directory
        run: ls -l windows_zip_signed_outputs
      - name: Copy windows build file to root
        run: cp windows_zip_signed_outputs/* Kostori_windows_${{ env.tag }}.zip

      - name: Download windows msix build file
        uses: actions/download-artifact@v4
        with:
          name: windows_msix_signed_outputs
          path: windows_msix_signed_outputs
      - name: List files in windows_msix_signed_outputs directory
        run: ls -l windows_msix_signed_outputs
      - name: Copy windows build file to root
        run: cp windows_msix_signed_outputs/* Kostori_windows_${{ env.tag }}.msix
      - uses: softprops/action-gh-release@v2
        with:
          tag_name: ${{ github.ref_name }}
          files: |
            outputs/*.apk
            Kostori_windows_*.zip
            Kostori_windows_*.msix
        env:
          GITHUB_TOKEN: ${{ secrets.ACTION_GITHUB_TOKEN }}
